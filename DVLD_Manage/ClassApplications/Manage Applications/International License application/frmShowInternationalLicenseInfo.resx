<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>